basePath: /api
consumes:
- application/json
definitions:
  handler.addWorkerDTO:
    properties:
      shiftId:
        type: integer
      workerid:
        type: integer
    type: object
  handler.createShiftDTO:
    properties:
      id:
        type: integer
      machineid:
        type: integer
      shiftmaster:
        type: integer
    type: object
  handler.createUserDTO:
    properties:
      bitrixid:
        type: integer
      id:
        type: integer
      name:
        type: string
      role:
        type: string
    type: object
  handler.updateTaskDTO:
    properties:
      command:
        type: string
      comment:
        type: string
      userid:
        type: integer
    type: object
  services.Shift:
    properties:
      createdat:
        type: string
      deactivatedat:
        type: string
      id:
        type: integer
      isactive:
        type: boolean
      machineid:
        type: integer
      shiftMaster:
        type: integer
    type: object
  services.ShiftTask:
    properties:
      shiftid:
        type: integer
      taskid:
        type: integer
    type: object
  services.ShiftWorker:
    properties:
      shiftid:
        type: integer
      userid:
        type: integer
    type: object
  services.User:
    properties:
      bitrixid:
        type: integer
      id:
        type: integer
      name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: example@example.com
    name: API Support
    url: http://81.177.220.96/
  description: API for managing shifts and adding tasks
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Shift manager api
  version: "1.0"
paths:
  /api/machine/{id}:
    put:
      consumes:
      - application/json
      description: change machine status to need repair machine:id from the database.
      parameters:
      - description: Machine id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No connection
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: missing id
          schema:
            additionalProperties: true
            type: object
      summary: change machine status to need repair
      tags:
      - machine
  /api/shift/workers/:
    post:
      consumes:
      - application/json
      description: create new shift worker in db.
      parameters:
      - description: Task data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.addWorkerDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/services.ShiftWorker'
        "400":
          description: Invalid data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed
          schema:
            additionalProperties: true
            type: object
      summary: create a shift worker
      tags:
      - shift worker
  /api/shifts:
    get:
      description: get out shifts that are active.
      produces:
      - application/json
      responses:
        "200":
          description: List of active shifts
          schema:
            items:
              $ref: '#/definitions/services.Shift'
            type: array
        "500":
          description: Server error
          schema:
            additionalProperties: true
            type: object
      summary: get out shifts that are active
      tags:
      - shifts
  /api/task/:
    post:
      consumes:
      - application/json
      description: create new shift in db.
      parameters:
      - description: Shift data
        in: body
        name: shift
        required: true
        schema:
          $ref: '#/definitions/handler.createShiftDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/services.Shift'
        "400":
          description: Invalid data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed
          schema:
            additionalProperties: true
            type: object
      summary: create a shift
      tags:
      - shift
  /api/task/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task:id from the database.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No connection
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: missing id
          schema:
            additionalProperties: true
            type: object
      summary: Delete task
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: 'commands for update task: inProgress, completed, verified, failed'
      parameters:
      - description: Task data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.updateTaskDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed
          schema:
            additionalProperties: true
            type: object
      summary: update task task by command
      tags:
      - task
  /api/user/:
    post:
      consumes:
      - application/json
      description: create new user in db.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.createUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/services.User'
        "400":
          description: Invalid data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed
          schema:
            additionalProperties: true
            type: object
      summary: create a user
      tags:
      - user
  /api/users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/services.User'
            type: array
        "500":
          description: Server error
          schema:
            additionalProperties: true
            type: object
      summary: Get list of users
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user:id from the database.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No connection
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: missing id
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Return list of shift workers  by shift id.
      parameters:
      - description: Shift id
        format: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of shift workers by shift id
          schema:
            items:
              $ref: '#/definitions/services.ShiftWorker'
            type: array
        "400":
          description: invalid data
          schema:
            additionalProperties: true
            type: object
      summary: Get list of shift workers  by shift id
      tags:
      - shift worker
  /api/users/{role}:
    get:
      consumes:
      - application/json
      description: Return list of users with role.
      parameters:
      - description: Users role
        format: id
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of users with role
          schema:
            items:
              $ref: '#/definitions/services.User'
            type: array
        "400":
          description: invalid data
          schema:
            additionalProperties: true
            type: object
      summary: Get list of users with role
      tags:
      - students
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
